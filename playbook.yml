---
- name: All hosts up-to-date
  hosts: all
  become: true
  vars:
    user: "{{ lookup('env', 'USER') }}"
    pacman:
      - base-devel
      - git
      - wget
      - github-cli
      - fcitx5-im
      - fcitx5-mozc
      - btop
      - dolphin
      - fish
      - ranger
      - xclip
      - python
      - curl
      - unzip
      - ripgrep
      - procps
      - gcc
      - nodejs
      - lazygit
      - playerctl
      - emacs
      - krita
      - jdk-openjdk
      - efibootmgr
      - gparted
      - mangohud
      - go
      - openvpn
      - chromium
      - file-roller
      - qpwgraph
      - scrcpy
      - sqlitebrowser
      - clang
      - cmake
      - ninja
      - proton-vpn-gtk-app
      - ttf-jetbrains-mono-nerd
      - noto-fonts-cjk
      - android-tools
      - openvpn
      - wireguard-tools
      - networkmanager
      - network-manager-applet
      - ttf-liberation
      - linux-headers
      - copyq
      - python-pynvim
      - tree
      - kitty
      - python-pip
      - wine-staging
      - winetricks
      - firejail
      - pipewire
      - pipewire-pulse
      - pipewire-audio
      - wireplumber
      - cpupower
      - fastfetch
      - kotlin
      - android-file-transfer
    desktop_packages:
      - steam
      - nvidia-open-dkms
      - gamemode
      - lib32-gamemode
    laptop_packages:
      - powertop
      - tlp
      - thermald
    aur:
      - vscodium-bin
      - floorp-bin
      - anki-bin
      - qdirstat-bin
      - sunshine
      - flutter-bin
      - android-sdk
      - android-sdk-platform-tools
      - android-sdk-cmdline-tools-latest
      - android-sdk-build-tools-35
      - android-platform-35
      - jdownloader2
    desktop_aur:
      - gwe

  pre_tasks:
    - name: Get user UID and GID
      ansible.builtin.getent:
        database: passwd
        key: "{{ user }}"
      register: user_info
      failed_when: user_info.ansible_facts.getent_passwd[user] is not defined

    - name: Get user group information
      ansible.builtin.getent:
        database: group
        key: "{{ user }}"
      register: group_info
      failed_when: group_info.ansible_facts.getent_group[user] is not defined

  tasks:
    - name: Debug group_names
      ansible.builtin.debug:
        msg: "Group names for this host: {{ group_names }}"

    - name: Create aur_builder user for AUR operations
      user:
        name: aur_builder
        state: present

    - name: Allow aur_builder to run pacman without password
      lineinfile:
        path: /etc/sudoers.d/aur_builder-allow-to-sudo-pacman
        state: present
        line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
        validate: '/usr/sbin/visudo -cf %s'
        create: yes

    - name: Ensure [multilib] section exists in /etc/pacman.conf
      ansible.builtin.blockinfile:
        path: /etc/pacman.conf
        block: |
          [multilib]
          Include = /etc/pacman.d/mirrorlist
        marker: "# {mark} ANSIBLE MANAGED BLOCK - multilib"
        insertafter: EOF
        create: false
      register: multilib_section

    - name: Synchronize pacman database
      become: true
      community.general.pacman:
        update_cache: true
      when: multilib_section.changed

    - name: Install package
      community.general.pacman:
        name: "{{ pacman }}"
        state: present

    - name: Install aur packages
      include_tasks:
        file: "{{ playbook_dir }}/tasks/install_aurpackages.yml"
        apply:
          become: yes
          become_user: aur_builder
      loop: "{{ aur }}"

    - name: Create kdeglobals configuration
      ansible.builtin.blockinfile:
        path: "/home/{{ user}}/.config/kdeglobals"
        block: |
          [General]
          TerminalApplication=xfce4-terminal
        insertafter: EOF
        create: true

    - name: Ensure PipeWire and WirePlumber services are enabled for the user
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: true
        scope: user
        state: started
      loop:
        - pipewire.service
        - pipewire-pulse.service
        - wireplumber.service
      become: false
      become_user: "{{ user }}"

    #設定がある場合スキップすることで高速化可能
    - name: Create PipeWire configuration directory for the user
      ansible.builtin.file:
        path: "/home/{{ user }}/.config/pipewire/pipewire.conf.d"
        state: directory
        mode: '0755'
      become: false
      become_user: "{{ user }}"
      register: pipewire_config_dir_stat

    - name: Create PipeWire null sink configuration
      ansible.builtin.copy:
        content: |
          context.objects = [
            {
              factory = adapter
              args = {
                factory.name = support.null-audio-sink
                node.name = my-sink
                media.class = Audio/Sink
                object.linger = true
                audio.position = [ FL FR ]
                monitor.channel-volumes = true
                monitor.passthrough = true
              }
            }
          ]
        dest: "/home/{{ user }}/.config/pipewire/pipewire.conf.d/20-link-null-sink.conf"
        mode: '0644'
      become: false
      become_user: "{{ user }}"
      notify: Restart PipeWire services
      when: pipewire_config_dir_stat.changed

    - name: Add system variable to .xprofile
      become: false
      become_user: "{{ user }}"
      ansible.builtin.blockinfile:
        path: "/home/{{ user }}/.xprofile"
        block: |
          #!/bin/sh
          fcitx5 -d
          export GTK_IM_MODULE=fcitx
          export QT_IM_MODULE=fcitx
          export XMODIFIERS=@im=fcitx
        marker: "# {mark} ANSIBLE MANAGED BLOCK - .xprofile"
        insertafter: EOF
        create: yes

    - name: Add system variable to .bashrc
      blockinfile:
        path: "/home/{{ user }}/.bashrc"
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: |
          if [[ $(ps --no-header --pid=$PPID --format=comm) != "fish" && -z "${BASH_EXECUTION_STRING}" ]]; then
            shopt -q login_shell && LOGIN_OPTION='--login' || LOGIN_OPTION=""
            exec /usr/bin/fish $LOGIN_OPTION
          fi
        state: present

    - name: Ensure EDITOR is set in /etc/environment
      ansible.builtin.lineinfile:
        path: /etc/environment
        line: 'EDITOR=nvim'
        state: present
        create: yes
      register: env_result
      changed_when: env_result.changed

    - name: Change CPU governor to performance for all cores
      lineinfile:
        path: /etc/default/cpupower
        state: present
        line: 'governor=performance'
        create: yes

    - name: Create CopyQ autostart desktop entry
      copy:
        dest: /etc/xdg/autostart/copyq.desktop
        content: |
          [Desktop Entry]
          Type=Application
          Name=CopyQ
          Exec=copyq
          Hidden=false
          NoDisplay=false
          X-GNOME-Autostart-enabled=true
          Comment=Clipboard manager with advanced features
        mode: '0644'
      become: yes

    - name: Create sunshine autostart desktop entry
      copy:
        dest: /etc/xdg/autostart/sunshine.desktop
        content: |
          [Desktop Entry]
          Type=Application
          Name=Sunshine
          Exec=sh -c "sleep 3 && sunshine"
          Hidden=false
          NoDisplay=false
          X-GNOME-Autostart-enabled=true
          Comment=Clipboard manager with advanced features
        mode: '0644'
      become: yes

    - name: Check ownership of /opt/flutter
      ansible.builtin.stat:
        path: /opt/flutter
      register: flutter_stat

    - name: Check ownership of /opt/android-sdk
      ansible.builtin.stat:
        path: /opt/android-sdk
      register: android_sdk_stat

    - name: Change ownership of /opt/flutter
      ansible.builtin.file:
        path: /opt/flutter
        owner: "{{ user }}"
        group: "{{ user }}"
        recurse: yes
        state: directory
      when: flutter_stat.stat.uid != (user_info.ansible_facts.getent_passwd[user][2] | int)
      register: flutter_ownership

    - name: Change ownership of /opt/android-sdk
      ansible.builtin.file:
        path: /opt/android-sdk
        owner: "{{ user }}"
        group: "{{ user }}"
        recurse: yes
        state: directory
      when: android_sdk_stat.stat.uid != (user_info.ansible_facts.getent_passwd[user][2] | int)
      register: android_sdk_ownership

    - name: Enable and start NetworkManager
      ansible.builtin.systemd_service:
        name: NetworkManager.service
        enabled: true
        state: started

    - name: '"INCLUDE DESKTOP ROLE"'
      include_tasks:
        file: "{{ playbook_dir }}/tasks/desktop_task.yml"
        apply:
          become: yes
      when: "'desktop' in group_names"

    - name: '"INCLUDE LAPTOP ROLE"'
      include_tasks:
        file: "{{ playbook_dir }}/tasks/laptop_task.yml"
        apply:
          become: yes
      when: "'laptop' in group_names"

  handlers:
    - name: Restart PipeWire services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: restarted
        scope: user
      loop:
        - pipewire.service
        - pipewire-pulse.service
        - wireplumber.service
      become: false
      become_user: "{{ user }}"

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: yes
